name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable

      - uses: Swatinem/rust-cache@v1

      - name: Run cargo build
        uses: actions-rs/cargo@v1.0.3
        with:
          command: build
          args: --workspace --release --all-features

  test:
    name: Test Suite
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install nightly toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          components: llvm-tools-preview

      - uses: Swatinem/rust-cache@v1

      - name: Execute tests
        uses: actions-rs/cargo@v1
        with:
            command: test
            args: --workspace --all-features --no-fail-fast -- --test-threads=1
        env:
          CARGO_INCREMENTAL: 0
          RUST_BACKTRACE: 1
          RUSTFLAGS: "-Zprofile -Zinstrument-coverage -Cdebuginfo=2 -Ccodegen-units=1 -Copt-level=0 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests"
          RUSTDOCFLAGS: '-Zprofile -Zinstrument-coverage -Cdebuginfo=2 -Ccodegen-units=1 -Copt-level=0 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests'

      - name: Pre-installing grcov
        uses: actions-rs/install@v0.1
        with:
          crate: grcov
          version: latest

      - name: Gather coverage data
        id: coverage
        uses: actions-rs/grcov@v0.1

      - name: Pre-installing rust-covfix
        uses: actions-rs/install@v0.1
        with:
          crate: rust-covfix
          version: latest

      - name: Fix coverage data
        id: fix-coverage
        run: rust-covfix lcov.info -o lcov.info

      # - name: Run cargo-tarpaulin
      #   uses: actions-rs/tarpaulin@v0.1
      #   with:
      #     args: --workspace --all-features --no-fail-fast --verbose

      - name: Upload to codecov.io
        uses: codecov/codecov-action@v1
        with:
          token: ${{secrets.CODECOV_TOKEN}}

  lints:
    name: Lints
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: rustfmt, clippy

      - uses: Swatinem/rust-cache@v1

      - name: Run cargo fmt
        uses: actions-rs/cargo@v1.0.3
        with:
          command: fmt
          args: -- --check

      - uses: actions-rs/clippy-check@v1.0.7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --workspace --all-features --all-targets
