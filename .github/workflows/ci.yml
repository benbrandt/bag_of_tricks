name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  CARGO_TERM_COLOR: always
  LLVM_PROFILE_FILE: "coverage-%p-%m.profraw"

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install nightly toolchain
        uses: actions-rs/toolchain@v1
        with:
          components: llvm-tools-preview
          override: true
          profile: minimal
          toolchain: nightly

      - uses: Swatinem/rust-cache@v1

      - name: Run cargo build
        uses: actions-rs/cargo@v1.0.3
        with:
          command: build
          args: --workspace --all-features
        env:
          RUSTFLAGS: "-Zinstrument-coverage"
          RUSTDOCFLAGS: "-Zinstrument-coverage -Zunstable-options --persist-doctests target/debug/doctestbins"

      - name: Execute tests
        uses: actions-rs/cargo@v1
        with:
            command: test
            args: --workspace --all-features --no-fail-fast
        env:
          RUSTFLAGS: "-Zinstrument-coverage"
          RUSTDOCFLAGS: "-Zinstrument-coverage -Zunstable-options --persist-doctests target/debug/doctestbins"

      - run: curl -L https://github.com/mozilla/grcov/releases/latest/download/grcov-linux-x86_64.tar.bz2 | tar jxf -

      - run: ./grcov . -s . --binary-path ./target/debug/ -t lcov --branch --ignore-not-existing --llvm --ignore "/*" -o lcov.info

      - name: Upload to codecov.io
        uses: codecov/codecov-action@v2.0.1
        with:
          token: ${{secrets.CODECOV_TOKEN}}

  lints:
    name: Lints
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: rustfmt, clippy

      - uses: Swatinem/rust-cache@v1

      - name: Run cargo fmt
        uses: actions-rs/cargo@v1.0.3
        with:
          command: fmt
          args: -- --check

      - uses: actions-rs/clippy-check@v1.0.7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --workspace --all-features --all-targets
